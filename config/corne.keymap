/*
 * Copyright (c) 2020 The ZMK Contributors
 *
 * SPDX-License-Identifier: MIT
 */

#include <behaviors.dtsi>
#include <dt-bindings/zmk/keys.h>
#include <dt-bindings/zmk/bt.h>

// Layer definitiond
#define DEFAULT 0
#define UTIL   1
#define SYMNUM   2
#define FUNC   3

// German Keycodes
#define DE_PLUS RBKT // +
#define DE_ASTR LS(DE_PLUS) // *
#define DE_HASH NUHS // #

#define DE_ODIA SEMI // ö
#define DE_ADIA APOS // ä
#define DE_UDIA LBKT // ü
#define DE_SS MINUS // ß

#define DE_MINUS FSLH // - and _
#define DE_FSLH AMPS // /

#define DE_DQT AT // "
#define DE_SQT PIPE // '

#define DE_Y Z // y
#define DE_Z Y // z

#define DE_QMARK LS(DE_SS) // ?
#define DE_BSLH RA(DE_SS) // backslash
#define DE_LPAR LS(NUMBER_8) 
#define DE_RPAR LS(NUMBER_9) 

#define DE_LBRC RA(NUMBER_7) 
#define DE_RBRC RA(NUMBER_0) 
#define DE_LBKT RA(NUMBER_8)  
#define DE_RBKT RA(NUMBER_9) 

#define DE_CARET GRAVE // ^
#define DE_LT NUBS
#define DE_GT LS(DE_LT)

#define DE_AT RA(Q) // 
#define DE_PIPE RA(NUBS) // |
#define DE_TILDE RA(DE_PLUS) // ~

#define DE_EURO RA(E) 
#define DE_EQUAL LS(NUMBER_0) 
#define DE_DLLR LS(NUMBER_4) 
#define DE_PRCNT LS(NUMBER_5) 
#define DE_AMPS LS(NUMBER_6) 



/ {
        chosen {
              zmk,matrix_transform = &five_column_transform;
        };

// TODO: Homerow mods - lower row

        keymap {
                compatible = "zmk,keymap";

       /*.--------------------------------------.                         .----------------------------------------.
         |  Q   |   W   |   F   |   P   |   B   |                         |   J   |   L   |   U   |   Y   |  BSPC  |
         |------+-------+-------+-------+-------|                         |-------+-------+-------+-------+--------|
         |  A   |   R   |   S   |   T   |   G   |                         |   M   |   N   |   E   |   I   |   O    |
         |------+-------+-------+-------+-------|                         |-------+-------+-------+-------+--------|
         |  Z   |   X   |   C   |   D   |   V   |                         |   K   |   H   |   ,   |    .  |   -    |
         '-----------------------------------------------|     |---------------------------------------------------'
                        |  CTRL    |  SHIFT     |   UTIL |     | SYMNUM   |  SPACE    |   WIN/GUI |
                        '--------------------------------'     '----------------------------------'*/
   
                base_layer {
			bindings = <
			&kp Q     &kp W   &kp F  &kp P  &kp B         &kp J  &kp L  &kp U     &kp DE_Y  &kp BSPC
	     	        &kp A     &kp R   &kp S  &kp T  &kp G         &kp M  &kp N  &kp E     &kp I     &kp O           
			&kp DE_Z  &kp X   &kp C  &kp D  &kp V         &kp K  &kp H  &kp COMMA &kp DOT   &kp DE_MINUS
			        &kp LCTRL &sk LSHIFT  &sl UTIL        &sl SYMNUM &kp SPACE &kp LMETA
			>;
		};

        };

       /*.--------------------------------------.                         .----------------------------------------.
         | HOME | PG_DN |  UP   | PG_UP |  END  |                         |   Ä   |   ß   |   U   |   Y   |  BSPC  |
         |------+-------+-------+-------+-------|                         |-------+-------+-------+-------+--------|
         | TAB  |  LEFT | DOWN  | RIGHT | ENTER |                         |   Ö   |   (   |   )   |   <   |   >    |
         |------+-------+-------+-------+-------|                         |-------+-------+-------+-------+--------|
         | ESC  | PSCRN |  DEL  |  BSPC |  BSPC |                         |   Ü   |   {   |   }   |   ?   |   !    |
         '-----------------------------------------------|     |---------------------------------------------------'
                        |  CTRL    |  SHIFT     |   UTIL |     |  FUNC   |  SPACE    |   WIN/GUI |
                        '--------------------------------'     '----------------------------------'*/

                util_layer {
			bindings = <
			&kp HOME        &kp PG_DN &kp UP     &kp PG_UP &kp END               &kp DE_ADIA  &kp DE_SS    &kp DE_LBKT   &kp DE_RBKT  &kp BSPC
	                &kp TAB         &kp LEFT  &kp DOWN   &kp RIGHT &kp ENTER             &kp DE_ODIA  &kp DE_LPAR  &kp DE_RPAR   &kp DE_LT    &kp DE_GT    
			&kp ESC         &kp PSCRN &kp DEL    &kp BSPC  &kp LC(BSPC)          &kp DE_UDIA  &kp DE_LBRC  &kp DE_RBRC   &kp DE_QMARK  &kp EXCL
				                   &kp LCTRL &sk LSHIFT  &to UTIL          &to FUNC &kp SPACE &kp LMETA
			>;
		};

       /*.--------------------------------------.                         .----------------------------------------.
         |      |   "   |   \   |   |   |       |                         |   -   |   7   |   8   |   9   |   /    |
         |------+-------+-------+-------+-------|                         |-------+-------+-------+-------+--------|
         |   '  |   #   |   /   |   @   |   ^   |                         |   +   |   4   |   5   |   6   |   *    |
         |------+-------+-------+-------+-------|                         |-------+-------+-------+-------+--------|
         |   %  |   $   |   €   |   ~   |   &   |                         |   0   |   1   |   2   |   3   |   =    |
         '-----------------------------------------------|     |---------------------------------------------------'
                        |  CTRL    |  SHIFT     |   UTIL |     | SYMNUM   |  SPACE    |   WIN/GUI |
                        '--------------------------------'     '----------------------------------'*/

                symnum_layer {
			bindings = <
			&none         &kp DE_DQT   &kp DE_BSLH  &kp DE_PIPE   &none                &kp DE_MINUS	 &kp N7  &kp N8  &kp N9  &kp DE_FSLH
			&kp DE_SQT    &kp DE_HASH  &kp DE_FSLH  &kp DE_AT     &kp DE_CARET         &kp DE_PLUS   &kp N4  &kp N5  &kp N6  &kp DE_ASTR       
			&kp DE_PRCNT  &kp DE_DLLR  &kp DE_EURO  &kp DE_TILDE  &kp DE_AMPS          &kp N0    	 &kp N1  &kp N2  &kp N3  &kp DE_EQUAL
				                          &kp LCTRL &sk LSHIFT  &to UTIL           &to SYMNUM &kp SPACE &kp LMETA 
			>;
		};


        // OUT_BLE set prefered output to bluetooth instead of USB
       /*.--------------------------------------.                         .----------------------------------------.
         | BT0  |  BT1  |  BT2  |  BT3  | VOL_UP|                         |       |   F1  |   F2  |   F3  |   F4   |
         |------+-------+-------+-------+-------|                         |-------+-------+-------+-------+--------|
         |BT_CLR| BT_NXT|  OUT  |       |  MUTE |                         |       |   F5  |   F6  |   F7  |   F8   |
         |------+-------+-------+-------+-------|                         |-------+-------+-------+-------+--------|
         |      |       |       |       | VOL_DN|                         |       |   F9  |   F10 |   F11 |   F12  |
         '-----------------------------------------------|     |---------------------------------------------------'
                        |  CTRL    |   SHIFT    |  BASE  |     |          |  SPACE    |   WIN/GUI |
                        '--------------------------------'     '----------------------------------'*/


		function_layer {
			bindings = <
			&none         &kp DE_DQT   &kp DE_BSLH  &kp DE_PIPE   &none                     &none    &kp F1     &kp F2     &kp F3     &kp F4
			&kp DE_SQT    &kp DE_HASH  &kp DE_FSLH  &kp DE_AT     &kp DE_CARET              &none    &kp F5     &kp F6     &kp F7     &kp F8   
			&kp DE_PRCNT  &kp DE_DLLR  &kp DE_EURO  &kp DE_TILDE  &kp DE_AMPS               &none    &kp F9     &kp F10    &kp F11    &kp F12
				                              &kp LCTRL &sk LSHIFT  &to 0               &none   &kp SPACE &kp LMETA 
			>;
		};

};
